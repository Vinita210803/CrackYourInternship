class Solution {
public:
    int majorityElement(vector<int>& nums) {
        // int n = nums.size();               //method1
        //  sort(nums.begin(),nums.end());
        // return nums[n/2];
         
        // int n = nums.size();    //method2
        // int count=0;
        // int max=nums[0];
        //  for(int i=0;i<n;i++){       ////[1,3,4,2,2,2,4,2,2,2]
        //      if(count<=0){
        //          max=nums[i];
        //      }
        //      if(max == nums[i]){
        //          count++;
        //      }
        //      else{
        //          count--;
        //      }
        //  }
        //  return  max;

        //method3
         unordered_map<int, int> mp; 
         int n=nums.size(); 
        for (auto a : nums) {
            mp[a]++;
        }
        int ans = 0; 
        for (auto a : mp) {
            if (a.second > n/2) {
                ans = a.first; 
            }
        }
        return ans; 
    }
};
